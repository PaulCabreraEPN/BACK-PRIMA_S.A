components:
  schemas:
    Admin:
      type: object
      properties:
        username:
          type: string
          example: "admin2024"
        password:
          type: string
          example: "Admin123*"
        role:
          type: string
          example: "admin"
        status:
          type: boolean
          example: true
        chances:
          type: number
          example: 3
        lastLogin:
          type: string
          format: date-time
          example: "2024-03-15T10:30:00Z"
    Seller:
      type: object
      required:
        - names
        - lastNames
        - numberID
        - email
        - SalesCity
        - PhoneNumber
        - role
      properties:
        names:
          type: string
          example: "Juan Carlos"
          description: "Dos nombres del vendedor"
          minLength: 3
          maxLength: 50
        lastNames:
          type: string
          example: "Pérez García"
          description: "Dos apellidos del vendedor"
          minLength: 3
          maxLength: 50
        numberID:
          type: number
          example: 1234567890
          description: "Cédula ecuatoriana (10 dígitos)"
        email:
          type: string
          format: email
          example: "juan.perez@prima-sa.com"
          description: "Correo electrónico corporativo"
        username:
          type: string
          example: "JC@rlos1234"
          description: "Generado automáticamente por el sistema"
          readOnly: true
        SalesCity:
          type: string
          example: "Quito"
          description: "Ciudad donde opera el vendedor"
          enum: ["Quito", "Guayaquil", "Cuenca", "Manta", "Ambato"]
        PhoneNumber:
          type: number
          example: 593987654321
          description: "Número de teléfono ecuatoriano"
        role:
          type: string
          example: "Seller"
          enum: ["Seller"]
          description: "Rol del usuario (siempre 'Seller')"
        status:
          type: boolean
          example: true
          description: "Estado de la cuenta"
          default: true

    SellerResponse:
      type: object
      properties:
        _id:
          type: string
          example: "65f0e3b2c54a8c3b7c9d5678"
        names:
          type: string
          example: "Juan Carlos"
        lastNames:
          type: string
          example: "Pérez García"
        numberID:
          type: number
          example: 1234567890
        email:
          type: string
          example: "juan.perez@prima-sa.com"
        username:
          type: string
          example: "JC@rlos1234"
        PhoneNumber:
          type: number
          example: 593987654321
        SalesCity:
          type: string
          example: "Quito"
        role:
          type: string
          example: "Seller"
        status:
          type: boolean
          example: true

paths:
  /api/register:
    post:
      tags:
        - Administradores
      summary: Registrar nuevo vendedor
      description: >
        Crea un nuevo vendedor en el sistema.
        
        **Notas importantes:**
        * El username se genera automáticamente
        * Se envía un email con credenciales al vendedor
        * El email debe ser confirmado antes de poder iniciar sesión
        * La cédula debe ser válida según el algoritmo ecuatoriano
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seller'
      responses:
        '201':
          description: Vendedor registrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Vendedor registrado exitosamente"
        '400':
          description: Error en el registro
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
              examples:
                camposVacios:
                  value:
                    msg: "Lo sentimos, debes llenar todos los campos"
                emailRepetido:
                  value:
                    msg: "Ya se encuentra registrado el email"
                cedulaRepetida:
                  value:
                    msg: "Número de cédula ya se encuentra registrado"
                cedulaInvalida:
                  value:
                    msg: "Cédula ecuatoriana inválida"

  /api/sellers:
    get:
      tags:
        - Administradores
      summary: Listar todos los vendedores
      description: Obtiene la lista de todos los vendedores registrados
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de vendedores obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerResponse'

  /api/sellers/{id}:
    get:
      tags:
        - Administradores
      summary: Buscar vendedor por ID
      description: Obtiene los detalles de un vendedor específico por su ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de MongoDB del vendedor
          example: "65f0e3b2c54a8c3b7c9d5678"
      responses:
        '200':
          description: Vendedor encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    $ref: '#/components/schemas/SellerResponse'
        '404':
          description: Vendedor no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Lo sentimos, no existe el vendedor con el id proporcionado"

  /api/sellers-numberid/{numberID}:
    get:
      tags:
        - Administradores
      summary: Buscar vendedor por cédula
      description: Obtiene los detalles de un vendedor por su número de cédula
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: numberID
          required: true
          schema:
            type: string
          description: Número de cédula ecuatoriana (10 dígitos)
          example: "1234567890"
      responses:
        '200':
          description: Vendedor encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    $ref: '#/components/schemas/SellerResponse'
        '400':
          description: Error en la búsqueda
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Lo sentimos, formato de cédula inválido"

  /api/updateSeller/{id}:
    patch:
      tags:
        - Administradores
      summary: Actualizar datos parciales del vendedor
      description: >
        Actualiza uno o más campos del vendedor.
        Solo se pueden actualizar: email, PhoneNumber, SalesCity, status
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de MongoDB del vendedor
          example: "65f0e3b2c54a8c3b7c9d5678"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "nuevo.email@prima-sa.com"
                PhoneNumber:
                  type: number
                  example: 593987654321
                SalesCity:
                  type: string
                  example: "Guayaquil"
                status:
                  type: boolean
                  example: true
      responses:
        '200':
          description: Actualización exitosa
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Vendedor actualizado correctamente"
                  data:
                    $ref: '#/components/schemas/SellerResponse'

  /api/updateAllSellerinfo/{id}:
    put:
      tags:
        - Administradores
      summary: Actualizar vendedor completo
      description: >
        Actualiza todos los campos del vendedor.
        Se generará una nueva contraseña automáticamente.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de MongoDB del vendedor
          example: "65f0e3b2c54a8c3b7c9d5678"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seller'
      responses:
        '200':
          description: Actualización exitosa
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Vendedor actualizado correctamente"
                  data:
                    $ref: '#/components/schemas/SellerResponse'
                  password:
                    type: string
                    example: "No se puede mostrar la contraseña por seguridad"

  /api/deleteSellerinfo/{id}:
    delete:
      tags:
        - Administradores
      summary: Eliminar vendedor
      description: Elimina permanentemente un vendedor del sistema
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de MongoDB del vendedor
          example: "65f0e3b2c54a8c3b7c9d5678"
      responses:
        '200':
          description: Eliminación exitosa
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Vendedor eliminado correctamente"
                  data:
                    $ref: '#/components/schemas/SellerResponse'