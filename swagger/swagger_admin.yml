components:
  schemas:
    Admin:
      type: object
      properties:
        username:
          type: string
          example: "admin2024"
        password:
          type: string
          example: "Admin123*"
        role:
          type: string
          example: "admin"
        status:
          type: boolean
          example: true
        chances:
          type: number
          example: 3
        lastLogin:
          type: string
          format: date-time
          example: "2024-03-15T10:30:00Z"

    Seller:
      type: object
      properties:
        names:
          type: string
          example: "Juan Carlos"
        lastNames:
          type: string
          example: "Pérez García"
        numberID:
          type: number
          example: 1234567890
        email:
          type: string
          example: "juan.perez@empresa.com"
        username:
          type: string
          example: "jperez2024"
        SalesCity:
          type: string
          example: "Quito"
        PhoneNumber:
          type: number
          example: 0987654321
        role:
          type: string
          example: "seller"
        status:
          type: boolean
          example: true

paths:
  /api/login-admin:
    post:
      tags:
        - Administrador
      summary: Login de administrador
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "admin2024"
                password:
                  type: string
                  example: "Admin123*"
      responses:
        200:
          description: Login exitoso
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: "Inicio de sesion exitoso"
                  inf:
                    _id: "65f0e3b2c54a8c3b7c9d1234"
                    username: "admin2024"
                    role: "admin"
                    createdAt: "2024-03-12T15:30:00Z"
                  tokenJWT: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        400:
          description: Error en credenciales
          content:
            application/json:
              schema:
                type: object
                examples:
                  camposVacios:
                    value:
                      msg: "Lo sentimos, debes llenar todos los campos"
                  usuarioInexistente:
                    value:
                      msg: "Usuario Inexistente"
                  contraseñaErronea:
                    value:
                      msg: "Contraseña erronea. Le quedan 2 intentos"
                  cuentaBloqueada:
                    value:
                      msg: "La Cuenta está bloqueada"

  /api/recovery-password-admin:
    post:
      tags:
        - Administrador
      summary: Recuperar contraseña de administrador
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "admin2024"
      responses:
        200:
          description: Recuperación exitosa
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: "Nueva Contraseña generada, REVISA EL CORREO DE LA EMPRESA"
        400:
          description: Error en la recuperación
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: "Lo sentimos, debes llenar todos los campos"

  /api/register:
    post:
      security:
        - bearerAuth: []
      tags:
        - Administrador
      summary: Registrar nuevo vendedor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seller'
      responses:
        201:
          description: Registro exitoso
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: "Vendedor registrado exitosamente"
        400:
          description: Error en el registro
          content:
            application/json:
              schema:
                type: object
                examples:
                  camposVacios:
                    value:
                      msg: "Lo sentimos, debes llenar todos los campos"
                  emailExistente:
                    value:
                      msg: "Ya se encuentra registrado el email"
                  cedulaExistente:
                    value:
                      msg: "Número de cédula ya se encuentra registrado"

  /api/sellers:
    get:
      security:
        - bearerAuth: []
      tags:
        - Administrador
      summary: Listar todos los vendedores
      responses:
        200:
          description: Lista de vendedores
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  example:
                    _id: "65f0e3b2c54a8c3b7c9d5678"
                    name: "Juan Carlos"
                    lastNames: "Pérez García"
                    numberID: 1234567890
                    email: "juan.perez@empresa.com"
                    username: "jperez2024"
                    PhoneNumber: 0987654321
                    SalesCity: "Quito"
                    role: "seller"
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "Error al obtener los vendedores"
                  error: "Error interno del servidor"

  /api/sellers/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Administrador
      summary: Buscar vendedor por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          example: "65f0e3b2c54a8c3b7c9d5678"
      responses:
        200:
          description: Vendedor encontrado
          content:
            application/json:
              schema:
                type: object
                example:
                  msg:
                    _id: "65f0e3b2c54a8c3b7c9d5678"
                    name: "Juan Carlos"
                    lastNames: "Pérez García"
                    numberID: 1234567890
                    email: "juan.perez@empresa.com"
                    username: "jperez2024"
                    PhoneNumber: 0987654321
                    SalesCity: "Quito"
                    role: "seller"
        404:
          description: Vendedor no encontrado
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: "Lo sentimos, no existe el vendedor con el id proporcionado"

  /api/sellers-numberid:
    get:
      security:
        - bearerAuth: []
      tags:
        - Administrador
      summary: Buscar vendedor por cédula
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                numberID:
                  type: number
                  example: 1234567890
      responses:
        200:
          description: Vendedor encontrado
          content:
            application/json:
              schema:
                type: object
                example:
                  msg:
                    _id: "65f0e3b2c54a8c3b7c9d5678"
                    name: "Juan Carlos"
                    lastNames: "Pérez García"
                    numberID: 1234567890
                    email: "juan.perez@empresa.com"
                    username: "jperez2024"
                    PhoneNumber: 0987654321
                    SalesCity: "Quito"
                    role: "seller"
        400:
          description: Error en la búsqueda
          content:
            application/json:
              schema:
                type: object
                examples:
                  cedulaVacia:
                    value:
                      msg: "Lo sentimos, debes propocionar la cédula del vendedor"
                  formatoInvalido:
                    value:
                      msg: "Lo sentimos, formato de cédula invalido"

  /api/updateSeller/{id}:
    patch:
      security:
        - bearerAuth: []
      tags:
        - Administrador
      summary: Actualizar datos parciales del vendedor
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          example: "65f0e3b2c54a8c3b7c9d5678"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                email: "nuevo.email@empresa.com"
                PhoneNumber: 0987654321
                SalesCity: "Guayaquil"
      responses:
        200:
          description: Actualización exitosa
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: "Vendedor actualizado correctamente"
                  data:
                    _id: "65f0e3b2c54a8c3b7c9d5678"
                    email: "nuevo.email@empresa.com"
                    PhoneNumber: 0987654321
                    SalesCity: "Guayaquil"
        400:
          description: Error en la actualización
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: "No se proporcionaron campos válidos para actualizar"

  /api/updateAllSellerinfo/{id}:
    put:
      security:
        - bearerAuth: []
      tags:
        - Administrador
      summary: Actualizar todos los datos del vendedor
      description: Actualiza completamente la información de un vendedor incluyendo contraseña
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          example: "65f0e3b2c54a8c3b7c9d5678"
          description: ID del vendedor a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "vendedor.nuevo@empresa.com"
                PhoneNumber:
                  type: number
                  example: 0987654321
                SalesCity:
                  type: string
                  example: "Guayaquil"
                password:
                  type: string
                  example: "NuevaContraseña123*"
              required:
                - email
                - PhoneNumber
                - SalesCity
                - password
      responses:
        200:
          description: Actualización exitosa
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: "Vendedor actualizado correctamente"
                  data:
                    _id: "65f0e3b2c54a8c3b7c9d5678"
                    email: "vendedor.nuevo@empresa.com"
                    PhoneNumber: 0987654321
                    SalesCity: "Guayaquil"
                  password: "No se puede mostrar la contraseña por seguridad"
        400:
          description: Error en la actualización
          content:
            application/json:
              schema:
                type: object
                examples:
                  camposVacios:
                    value:
                      error: "Datos vacíos. Por favor, llene todos los campos."
                  idInvalido:
                    value:
                      msg: "Lo sentimos, no existe el vendedor con el id proporcionado ingrese un id valido para actualizar"
        404:
          description: Vendedor no encontrado
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: "No se encontró el vendedor con el id proporcionado"
        500:
          description: Error del servidor
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: "Error interno del servidor"
                  error: "Detalles del error"

  /api/deleteSellerinfo/{id}:
    delete:
      security:
        - bearerAuth: []
      tags:
        - Administrador
      summary: Eliminar vendedor
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          example: "65f0e3b2c54a8c3b7c9d5678"
      responses:
        200:
          description: Eliminación exitosa
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: "Vendedor eliminado correctamente"
                  data:
                    _id: "65f0e3b2c54a8c3b7c9d5678"
                    name: "Juan Carlos"
                    lastNames: "Pérez García"
        404:
          description: Error en la eliminación
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: "Lo sentimos, no existe el vendedor con el id proporcionado"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT