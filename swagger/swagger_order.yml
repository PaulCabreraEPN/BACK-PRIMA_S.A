components:
  schemas:
    Order:
      type: object
      properties:
        customer:
          type: number
          description: RUC del cliente
          example: 1234567890
        seller:
          type: string
          description: ID del vendedor
          example: "65f0e3b2c54a8c3b7c9d5678"
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                example: "1001"
              quantity:
                type: number
                example: 5
        discountApplied:
          type: number
          example: 10
        netTotal:
          type: number
          example: 100.50
        totalWithTax:
          type: number
          example: 112.56
        status:
          type: string
          enum: [Pending, Completed, Cancelled]
          example: "Pending"
        comment:
          type: string
          example: "Entrega urgente"

paths:
  /api/orders/create:
    post:
      security:
        - bearerAuth: []
      tags:
        - Órdenes
      summary: Crear nueva orden
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        201:
          description: Orden creada exitosamente
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: "Orden creada con éxito"
                  savedOrder:
                    $ref: '#/components/schemas/Order'
        400:
          description: Error en la creación
          content:
            application/json:
              schema:
                type: object
                examples:
                  camposRequeridos:
                    value:
                      message: "Todos los campos son requeridos"
                  stockInsuficiente:
                    value:
                      message: "Stock insuficiente para el producto 1001. Stock actual: 10, Cantidad solicitada: 15"

  /api/orders:
    get:
      security:
        - bearerAuth: []
      tags:
        - Órdenes
      summary: Obtener todas las órdenes
      responses:
        200:
          description: Lista de órdenes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        404:
          description: No hay órdenes
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "No se encontraron órdenes"

  /api/orders/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Órdenes
      summary: Obtener orden por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          example: "65f0e3b2c54a8c3b7c9d5678"
      responses:
        200:
          description: Orden encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        404:
          description: Orden no encontrada
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "Orden no encontrada"

  /api/orders/update/state/{id}:
    patch:
      security:
        - bearerAuth: []
      tags:
        - Órdenes
      summary: Actualizar estado de orden
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          example: "65f0e3b2c54a8c3b7c9d5678"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [Pending, Completed, Cancelled]
                  example: "Completed"
      responses:
        200:
          description: Estado actualizado
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: "Estado de la proforma actualizado correctamente"
        404:
          description: Orden no encontrada
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: "No se encontró la proforma con el id especificado"

  /api/orders/update/{id}:
    put:
      security:
        - bearerAuth: []
      tags:
        - Órdenes
      summary: Actualizar orden completa
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          example: "65f0e3b2c54a8c3b7c9d5678"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        200:
          description: Orden actualizada
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: "Orden actualizada con éxito"
        400:
          description: Error en actualización
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "El pedido ya no se puede actualizar"

  /api/orders/delete/{id}:
    delete:
      security:
        - bearerAuth: []
      tags:
        - Órdenes
      summary: Eliminar orden
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          example: "65f0e3b2c54a8c3b7c9d5678"
      responses:
        200:
          description: Orden eliminada
          content:
            application/json:
              schema:
                type: object
                example:
                  msg: "Orden eliminada con éxito y stock reestablecido"
        400:
          description: Error en eliminación
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "Lo sentimos, la orden ya fué procesada"